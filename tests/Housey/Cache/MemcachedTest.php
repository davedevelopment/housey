<?php
namespace Housey\Cache;

/**
 * Test class for Memcached.
 * Generated by PHPUnit on 2011-12-20 at 21:38:26.
 */
class MemcachedTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Memcached
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->mock = $this->getMock("\\Memcached");
        $this->object = new Memcached($this->mock);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers {className}::{origMethodName}
     * @todo Implement testGet().
     */
    public function testGet()
    {
        $this->mock->expects($this->once())
                   ->method('get')
                   ->with($key = 'dave');
        $this->object->get($key);
    }

   /**
     * @covers {className}::{origMethodName}
     * @todo Implement testSet().
     */
    public function testSet()
    {
        $this->mock->expects($this->once())
                   ->method('set')
                   ->with($key = 'dave', $val = 'development', $ttl = 123);
        $this->object->set($key, $val, $ttl);
    }

   /**
     * @covers {className}::{origMethodName}
     * @todo Implement testAdd().
     */
    public function testAdd()
    {
        $this->mock->expects($this->once())
                   ->method('add')
                   ->with($key = 'dave', $val = 'development', $ttl = 123);
        $this->object->add($key, $val, $ttl);
    }

    /**
     * @covers {className}::{origMethodName}
     * @todo Implement testDelete().
     */
    public function testDelete()
    {
        $this->mock->expects($this->once())
                   ->method('delete')
                   ->with($key = 'dave');
        $this->object->delete($key);
    }

}
?>
